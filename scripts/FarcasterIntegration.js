class FarcasterIntegration {
    constructor() {
        this.sdk = null;
        this.context = null;
        this.isInMiniApp = false;
        this.isFarcasterApp = false;
    }

    async init() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–±–æ—Ç–∞–µ–º –ª–∏ –º—ã –≤ Mini App
        if (!window.isMiniApp) {
            console.log('‚è≠Ô∏è Not in Mini App environment, skipping Farcaster initialization');
            return;
        }

        try {
            console.log('üîÑ Initializing Farcaster integration...');

            // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ SDK
            const sdk = await this.waitForSDK();
            this.sdk = sdk;

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
            let isInMiniAppEnv = true;
            try {
                if (typeof sdk.isInMiniApp === 'function') {
                    isInMiniAppEnv = await sdk.isInMiniApp();
                    console.log('üîç SDK environment check:', isInMiniAppEnv);
                }
            } catch (error) {
                console.log('‚ö†Ô∏è Could not verify environment with SDK:', error);
            }

            if (isInMiniAppEnv) {
                this.isInMiniApp = true;
                this.isFarcasterApp = true;
                console.log('‚úÖ Farcaster SDK initialized successfully');

                // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
                try {
                    this.context = await sdk.context;
                    console.log('üìã Farcaster context received');

                    // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    try {
                        const user = this.context.user;
                        console.log('üë§ User info:', {
                            fid: user?.fid,
                            username: user?.username,
                            displayName: user?.displayName
                        });
                    } catch (userError) {
                        console.log('‚ÑπÔ∏è User data not immediately available');
                    }
                } catch (error) {
                    console.log('‚ö†Ô∏è Could not get context:', error.message);
                }

                await this.setupMiniAppFeatures();
            } else {
                console.log('‚ö†Ô∏è SDK reports not in Mini App environment');
            }
        } catch (error) {
            console.error('‚ùå Error initializing Farcaster SDK:', error);
            this.isInMiniApp = false;
        }
    }

    async waitForSDK() {
        let attempts = 0;
        const maxAttempts = 50; // 5 —Å–µ–∫—É–Ω–¥

        while (attempts < maxAttempts) {
            if (window.sdk && typeof window.sdk.actions === 'object') {
                return window.sdk;
            }
            await new Promise(resolve => setTimeout(resolve, 100));
            attempts++;
        }
        throw new Error('SDK not loaded within timeout');
    }

    async setupMiniAppFeatures() {
        try {
            // –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ UI –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º ready()
            await new Promise(resolve => {
                requestAnimationFrame(() => {
                    setTimeout(resolve, 500); // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥
                });
            });
            console.log('üéâ Mini App features setup complete');
        } catch (error) {
            console.error('Error setting up Mini App features:', error);
        }
    }

    // –í—ã–∑—ã–≤–∞–µ–º ready –∫–æ–≥–¥–∞ –∏–≥—Ä–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–∞
    async notifyAppReady() {
        if (this.isInMiniApp && this.sdk && this.sdk.actions && this.sdk.actions.ready) {
            try {
                await this.sdk.actions.ready({
                    disableNativeGestures: false
                });
                console.log('üéâ Farcaster splash screen dismissed');
            } catch (error) {
                console.error('‚ùå Failed to dismiss splash screen:', error);
            }
        }
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è —à–∞—Ä–∏–Ω–≥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–≥—Ä—ã
    async shareScore(score, level) {
        if (!this.isFarcasterApp || !this.sdk || !this.sdk.actions || !this.sdk.actions.composeCast) return;

        try {
            const text = `üöÄ I just scored ${score || 0} points and reached level ${level || 1} in Flowers on Mars! Can you beat that? üëΩüí•`;
            const url = window.location.origin;

            await this.sdk.actions.composeCast({
                text: text,
                embeds: [url]
            });
        } catch (error) {
            console.error('Error sharing score:', error);
        }
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    getUserInfo() {
        if (this.isFarcasterApp && this.context && this.context.user) {
            const user = this.context.user;
            return {
                fid: user.fid || null,
                username: user.username || null,
                displayName: user.displayName || null,
                pfpUrl: user.pfpUrl || null
            };
        }
        return null;
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
window.farcasterIntegration = new FarcasterIntegration();

console.log('FarcasterIntegration.js loaded');